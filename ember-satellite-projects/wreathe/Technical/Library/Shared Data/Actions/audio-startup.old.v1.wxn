#!/bin/sh
#JACK startup action.
#Version 1, 5 November 2012.
#
# JACK/Pulse/DSP startup loader
#-----------------------------------------#

# Variables
#-----------------------------------------#
PULSECONF=/home/`whoami`/Technical/Library/Audio/jackd.pa
RACKFILE=/home/`whoami`/Technical/Library/Audio/array.rack
LOGDIR=/home/`whoami`/Technical/Library/Audio/Logs/jack
JACKLOG=/home/`whoami`/Technical/Library/Audio/Logs/jack/jack.log
TRANS=/home/`whoami`/Technical/Library/Audio/Logs/jack/transport
STATS=/home/`whoami`/Technical/Library/Audio/Logs/jack/stats

# Clean up old log files/logging stuff
#-----------------------------------------#
rm -rf $LOGDIR
mkdir $LOGDIR
sleep 1

# Check for configuration files, alert user
# to make them if they dont exist and exit
#------------------------------------------#
if [ -s $PULSECONF ]; then
	echo "JACKLoader: jackd.pa exists." > $JACKLOG
else
	echo "JACKLOADER: jackd.pa not found. Exiting." >> $JACKLOG
	notify-send "JACK" \
		"Error: No configuration file for pulse (jackd.pa)"
	exit 1
fi

# Ping clienf.conf, if it does not exist,
# make one. Kill pulse and continue
#----------------------------------------#
if [ -s /home/`whoami`/.pulse/client.conf ]; then
	echo "JACKLOADER: client.conf exists in ~/.pulse/" >> $JACKLOG
else
	echo "autospawn=no" > /home/`whoami`/.pulse/client.conf
	echo "JACKLOADER: Created client.conf. Killing pulseaudio..." >> $JACKLOG
	pulseaudio --kill >> $JACKLOG 2>&1 &
	sleep 1
fi

echo "JACKLOADER: Ready. Starting..." >> $JACKLOG

# Start JACK
#-----------------------------------------#

# To edit JACK settings, view JACK documentation or use
# Qjackctl to generate a .jackdrc and paste it here.
jackd -r -dalsa -dhw:0 -r96000 -p512 -n4 -P -o2 >> $JACKLOG 2>&1 &
sleep 2 &&

# Start Pulse
#-----------------------------------------#
pulseaudio -n -F $PULSECONF >> $JACKLOG 2>&1 &
sleep 2 &&

# Start JACK transport
#-----------------------------------------#
echo "play" | jack_transport > /dev/null 2>&1 &
sleep 1 &&
#jack-info > $TRANS &&

# Verify transport and continue
#-----------------------------------------#
if [ -s $TRANS ]; then
	# jack-info creates an empty file if JACK is not running or not transporting
	# so we just ping for a non-empty transport file. If it doesn't exist then there
	# was an error.
	echo "JACKLOADER: transport file exists and is not empty which indicates success, moving on..." >> $JACKLOG
else
	#notify-send "JACK" \
	#	"There was an error starting the sound servers.\nPlease see the log files."
	echo "JACKLOADER: Transport file not detected. This may be normal." >> $JACKLOG
#	exit 1
fi

# Launch DSP
#-----------------------------------------#
jack-rack -n $RACKFILE > /dev/null 2>&1 &
sleep 4 &&
# To make sure that jack-rack is registered before connecting...
sleep 2 &&

# Connect the components together
#-----------------------------------------#

# First disconnect the sink from the sound card
jack_disconnect "system:playback_1" "PulseAudio JACK Sink:front-left" >> $JACKLOG 2>&1
jack_disconnect "system:playback_2" "PulseAudio JACK Sink:front-right" >> $JACKLOG 2>&1
# Connect the sink to jack rack
jack_connect "PulseAudio JACK Sink:front-left" "jack_rack:in_1" >> $JACKLOG 2>&1
jack_connect "PulseAudio JACK Sink:front-right" "jack_rack:in_2" >> $JACKLOG 2>&1
# Connect jack rack to the sound card
jack_connect "jack_rack:out_1" "system:playback_1" >> $JACKLOG 2>&1
jack_connect "jack_rack:out_2" "system:playback_2" >> $JACKLOG 2>&1

# All done, notify & exit

#pactl load-module module-jack-sink channels=2; pactl load-module module-jack-source channels=2;pacmd set-default-sink jack_out;
